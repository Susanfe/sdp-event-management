apply plugin: 'com.android.application'
apply plugin: 'jacoco'

jacoco {
    toolVersion = "0.8.0"
}

android {
    compileSdkVersion 28
    buildToolsVersion '28.0.3'
    compileOptions.incremental = false

    defaultConfig {
        applicationId "ch.epfl.sweng.eventmanager"
        minSdkVersion 15
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner ".MockTestRunner"

        vectorDrawables.useSupportLibrary = true
        multiDexEnabled false
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            testCoverageEnabled true
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    testOptions {
        animationsDisabled = "true"
        unitTests.returnDefaultValues = true
    }
    useLibrary 'android.test.mock'

}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')

    // Support libraries
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.appcompat:appcompat:1.0.2'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'androidx.recyclerview:recyclerview:1.0.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'com.google.android.material:material:1.1.0-alpha01'
    implementation 'androidx.preference:preference:1.0.0'
    implementation 'androidx.legacy:legacy-preference-v14:1.0.0'

    // Lifecycle and DI
    implementation 'androidx.lifecycle:lifecycle-livedata:2.0.0'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.0.0'
    implementation 'com.google.dagger:dagger:2.19'
    implementation 'com.google.dagger:dagger-android:2.19'
    implementation 'com.google.dagger:dagger-android-support:2.19'

    // Layout tools
    implementation 'com.github.vipulasri:timelineview:1.0.6'
    implementation 'com.jakewharton:butterknife:9.0.0-rc1'
    implementation 'com.journeyapps:zxing-android-embedded:3.6.0'

    // Firebase
    implementation 'com.google.firebase:firebase-core:16.0.5'
    implementation 'com.google.firebase:firebase-database:16.0.5'
    implementation 'com.google.firebase:firebase-storage:16.0.5'
    implementation 'com.google.firebase:firebase-auth:16.0.5'
    implementation 'com.google.firebase:firebase-functions:16.1.3'

    // Tools
    implementation 'androidx.room:room-runtime:2.1.0-alpha02'
    implementation 'com.google.zxing:core:3.3.2'
    implementation 'com.android.volley:volley:1.1.1'
    implementation 'com.auth0.android:jwtdecode:1.1.1'

    // Play services
    implementation 'com.google.android.gms:play-services-maps:16.0.0'
    implementation 'com.google.maps.android:android-maps-utils:0.5+'

    // Twitter APIs
    implementation 'com.twitter.sdk.android:twitter-core:3.1.1'
    implementation 'com.twitter.sdk.android:tweet-ui:3.1.1'

    // Annotations
    annotationProcessor 'androidx.room:room-compiler:2.1.0-alpha02'
    annotationProcessor 'com.google.dagger:dagger-android-processor:2.19'
    annotationProcessor 'com.google.dagger:dagger-compiler:2.19'
    annotationProcessor 'com.jakewharton:butterknife-compiler:9.0.0-rc1'

    //UI Animation
    implementation 'jp.wasabeef:recyclerview-animators:3.0.0'

    // CSV Parsing
    implementation 'org.apache.commons:commons-csv:1.6'

    // Tests
    testImplementation 'junit:junit:4.12'
    testImplementation 'org.mockito:mockito-core:2.23.0'
    testImplementation "androidx.arch.core:core-testing:2.0.0"

    androidTestAnnotationProcessor 'com.google.dagger:dagger-android-processor:2.19'
    androidTestAnnotationProcessor 'com.google.dagger:dagger-compiler:2.19'

    androidTestImplementation "androidx.arch.core:core-testing:2.0.0"
    androidTestImplementation 'androidx.test:runner:1.1.0'
    androidTestImplementation 'androidx.test:rules:1.1.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.0'
    androidTestImplementation 'androidx.test.espresso:espresso-contrib:3.1.0'
    androidTestImplementation 'androidx.test.espresso:espresso-intents:3.1.0'
    androidTestImplementation 'org.mockito:mockito-android:2.22.0'
}

tasks.withType(Test) {
    jacoco.includeNoLocationClasses = true
}

task jacocoTestReport(type: JacocoReport, dependsOn: ['testDebugUnitTest', 'test', 'createDebugCoverageReport']) {

    reports {
        xml.enabled = true
        html.enabled = true
    }

    def fileFilter = [
            '**/R.class',
            '**/R$*.class',
            '**/BuildConfig.*',
            '**/Manifest*.*',
            '**/*Test*.*',
            'android/**/*.*',
            '**/*_MembersInjector.class',
            '**/Dagger*Component*.class',
            '**/Dagger*Subcomponent*.class',
            '**/*Subcomponent$Builder.class',
            '**/*_*Factory.class',
            '**/*_Impl*.class',
            '**/*_*ViewBinding*.class',
            '**/repository/impl/*.class',
            '**/ui/event/interaction/fragments/EventMapFragment.class'
    ]
    def debugTree = fileTree(dir: "$project.buildDir/intermediates/javac/debug", excludes: fileFilter)
    def mainSrc = "$project.projectDir/src/main/java"

    sourceDirectories = files([mainSrc])
    classDirectories = files([debugTree])
    executionData = fileTree(dir: project.buildDir, includes: [
            'jacoco/testDebugUnitTest.exec', 'outputs/code-coverage/connected/*coverage.ec'
    ])
}
apply plugin: 'com.google.gms.google-services'
